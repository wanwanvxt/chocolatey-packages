<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>xmake</id>
    <version>3.0.1</version>
    <packageSourceUrl>https://github.com/wanwanvxt/chocolatey-packages/tree/main/xmake</packageSourceUrl>
    <owners>wanwan</owners>

    <title>xmake</title>
    <authors>xmake.io and tboox.org</authors>
    <projectUrl>https://xmake.io</projectUrl>
    <iconUrl>http://rawcdn.githack.com/wanwanvxt/chocolatey-packages/main/icons/xmake.png</iconUrl>
    <copyright>Copyright (c) 2015-present xmake.io and tboox.org</copyright>
    <licenseUrl>https://github.com/xmake-io/xmake/blob/dev/LICENSE.md</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/xmake-io/xmake</projectSourceUrl>
    <docsUrl>https://xmake.io/#/getting_started</docsUrl>
    <mailingListUrl>https://xmake.io/#/about/contact</mailingListUrl>
    <bugTrackerUrl>https://github.com/xmake-io/xmake/issues</bugTrackerUrl>
    <tags>c linux c-plus-plus package-manager visual-studio cmake build lua objective-c makefile build-tool wdk xmake tbox cross-toolchains</tags>
    <summary>🔥 A cross-platform build utility based on Lua</summary>
    <description>**xmake - A cross-platform build utility based on Lua**
_Modern C/C++ build tool: Simple, Fast, Powerful dependency package integration_

Xmake is a lightweight cross-platform build utility based on Lua. It uses a Lua script to maintain project builds, but is driven by a dependency free core program written in C. Compared with Makefiles or CMake, the configuration syntax is much concise and intuitive. As such, it's friendly to novices while still maintaining the flexibly required in a build system. With Xmake, you can focus on your project instead of the build.

Xmake can be used to directly build source code (like with Make or Ninja), or it can generate project source files like CMake or Meson. It also has a  _built-in_  package management system to help users integrate C/C++ dependencies.

If you want to know more, please refer to: the [Documentation](https://xmake.io/#/getting_started), [GitHub](https://github.com/xmake-io/xmake) or [Gitee](https://gitee.com/tboox/xmake). You are also welcome to join our [community](https://xmake.io/#/about/contact).

![](https://xmake.io/assets/img/index/xmake-basic-render.gif)</description>
    <releaseNotes>### New features

* [#4810](https://github.com/xmake-io/xmake/issues/4810): Add Native XCode project generator plugin

### Bugs fixed

* [#6592](https://github.com/xmake-io/xmake/pull/6592): Fix objects only links
* [#6586](https://github.com/xmake-io/xmake/issues/6586): Fix build.fence policy
* [#6600](https://github.com/xmake-io/xmake/issues/6600): Fix compile_commands generator for c++modules
* [#6621](https://github.com/xmake-io/xmake/issues/6621): Fix android build for ndk r17c
* [#6635](https://github.com/xmake-io/xmake/discussions/6635): Fix batchcmds for qt/moc

### 新特性

* [#4810](https://github.com/xmake-io/xmake/issues/4810): 添加新的原生 Xcode 工程生成插件

### Bugs 修复

* [#6592](https://github.com/xmake-io/xmake/pull/6592): 修复 object 目标的链接问题
* [#6586](https://github.com/xmake-io/xmake/issues/6586): 修复 build.fence 策略
* [#6600](https://github.com/xmake-io/xmake/issues/6600): 修复 compile_commands 生成器
* [#6621](https://github.com/xmake-io/xmake/issues/6621): 修复 android ndk r17c 构建失败问题
* [#6635](https://github.com/xmake-io/xmake/discussions/6635): 修复 batchcmds 导致的 qt/moc 增量构建问题

## What's Changed
* Improve conan to support for wasm by @waruqi in https://github.com/xmake-io/xmake/pull/6559
* Do not add -fsanitize flags to msvc linker by @DownerCase in https://github.com/xmake-io/xmake/pull/6567
* Update Qt ts rule by @RC1844 in https://github.com/xmake-io/xmake/pull/6582
* Use pairs iterator for project.options instead of ipairs by @A2va in https://github.com/xmake-io/xmake/pull/6581
* Fix attempt to index a nil value by @star-hengxing in https://github.com/xmake-io/xmake/pull/6587
* feat(test): Support expected-failure tests via should_fail option by @romeoxbm in https://github.com/xmake-io/xmake/pull/6588
* feat(plugin/project): support gen compile_commands.json for specific target by @fcying in https://github.com/xmake-io/xmake/pull/6572
* improve ping #6579 by @waruqi in https://github.com/xmake-io/xmake/pull/6585
* Fix objectonly targets by @waruqi in https://github.com/xmake-io/xmake/pull/6592
* package(install): refine relative path generation in .pc files by @Doekin in https://github.com/xmake-io/xmake/pull/6597
* New native Xcode project generator. by @JX-Master in https://github.com/xmake-io/xmake/pull/6411
* rename copyright by @waruqi in https://github.com/xmake-io/xmake/pull/6602
* fix project generator for c++modules by @waruqi in https://github.com/xmake-io/xmake/pull/6605
* vsxmake: add cxx20 by @ChrisCatCP in https://github.com/xmake-io/xmake/pull/6612
* fix: rust static and shared library failing to find extern crate in windows-msvc by @IMXEren in https://github.com/xmake-io/xmake/pull/6606
* fix: the cmake module cannot get the option `cxxflags` correctly by @npc1054657282 in https://github.com/xmake-io/xmake/pull/6623
* add sysroot to ldflags by @waruqi in https://github.com/xmake-io/xmake/pull/6622
* (cmake) fix default flags detection on windows platform by @Arthapz in https://github.com/xmake-io/xmake/pull/6619
* check options by @waruqi in https://github.com/xmake-io/xmake/pull/6626

## New Contributors
* @DownerCase made their first contribution in https://github.com/xmake-io/xmake/pull/6567
* @romeoxbm made their first contribution in https://github.com/xmake-io/xmake/pull/6588
* @fcying made their first contribution in https://github.com/xmake-io/xmake/pull/6572
* @JX-Master made their first contribution in https://github.com/xmake-io/xmake/pull/6411
* @IMXEren made their first contribution in https://github.com/xmake-io/xmake/pull/6606
* @npc1054657282 made their first contribution in https://github.com/xmake-io/xmake/pull/6623

**Full Changelog**: https://github.com/xmake-io/xmake/compare/v3.0.0...v3.0.1</releaseNotes>

    <!--<dependencies></dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
