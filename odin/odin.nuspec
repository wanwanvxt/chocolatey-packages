<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>odin</id>
    <version>2025.07-dev</version>
    <packageSourceUrl>https://github.com/wanwanvxt/chocolatey-packages/tree/main/odin</packageSourceUrl>
    <owners>wanwan</owners>

    <title>Odin (Portable)</title>
    <authors>gingerBill</authors>
    <projectUrl>https://odin-lang.org/</projectUrl>
    <iconUrl>http://rawcdn.githack.com/wanwanvxt/chocolatey-packages/main/icons/odin.png</iconUrl>
    <copyright>gingerBill</copyright>
    <licenseUrl>https://github.com/odin-lang/Odin/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/odin-lang/Odin</projectSourceUrl>
    <docsUrl>https://odin-lang.org/docs/</docsUrl>
    <mailingListUrl>https://odin-lang.org/</mailingListUrl>
    <bugTrackerUrl>https://github.com/odin-lang/Odin/issues</bugTrackerUrl>
    <tags>language programming-language compiler programming-languages odin-programming-language odin odin-lang</tags>
    <summary>Odin Programming Language</summary>
    <description># The Odin Programming Language


Odin is a general-purpose programming language with distinct typing, built for high performance, modern systems, and built-in data-oriented data types. The Odin Programming Language, the C alternative for the joy of programming.

Website: [https://odin-lang.org/](https://odin-lang.org/)

```odin
package main

import "core:fmt"

main :: proc() {
	program := "+ + * ðŸ˜ƒ - /"
	accumulator := 0

	for token in program {
		switch token {
		case '+': accumulator += 1
		case '-': accumulator -= 1
		case '*': accumulator *= 2
		case '/': accumulator /= 2
		case 'ðŸ˜ƒ': accumulator *= accumulator
		case: // Ignore everything else
		}
	}

	fmt.printf("The program \"%s\" calculates the value %d\n",
	           program, accumulator)
}

```

## Documentation

#### [Getting Started](https://odin-lang.org/docs/install)

Instructions for downloading and installing the Odin compiler and libraries.

#### [Nightly Builds](https://odin-lang.org/docs/nightly/)

Get the latest nightly builds of Odin.

### Learning Odin

#### [Overview of Odin](https://odin-lang.org/docs/overview)

An overview of the Odin programming language.

#### [Frequently Asked Questions (FAQ)](https://odin-lang.org/docs/faq)

Answers to common questions about Odin.

#### [Packages](https://pkg.odin-lang.org/)

Documentation for all the official packages part of the [core](https://pkg.odin-lang.org/core/) and [vendor](https://pkg.odin-lang.org/vendor/) library collections.

#### [Examples](https://github.com/odin-lang/examples)

Examples on how to write idiomatic Odin code. Shows how to accomplish specific tasks in Odin, as well as how to use packages from `core` and `vendor`.

#### [Odin Documentation](https://odin-lang.org/docs/)

Documentation for the Odin language itself.

#### [Odin Discord](https://discord.gg/sVBPHEv)

Get live support and talk with other Odin programmers on the Odin Discord.

### Articles

#### [The Odin Blog](https://odin-lang.org/news/)

The official blog of the Odin programming language, featuring announcements, news, and in-depth articles by the Odin team and guests.

## Warnings

* The Odin compiler is still in development.</description>
    <releaseNotes>## New Language Features
* Add `intrinsics.type_is_bit_field`
* Add `@(no_sanitize_memory)` with additions to `base:sanitizer`

## New Compiler Improvements
* Correct spelling in `odin doc -help` output
* Let `-test-all-packages` work with `-build-mode:test`
* Fix package docs
* Fix `swizzle` in `for in` statement
* Fix `divti3` not being exported
* Fix scope attribute proc grouping
* Forbid multiple uses of `-sanitize`
* `-vet-style`: Be strict with type switch case column alignment
* Let compound literal array be broadcast to a struct field of arrays
* Packages with `.odin` in the name no longer attempt to parse as odin files
* Let `-no-entry-point` work for Windows DLLs
* Guard against invalid proc types in parameter list
* Push `context` onto stack before evaluating procedure parameters
* Consider custom `#align` when determining union tag size
* Ensure `volatile` status for all atomic operations
* Fix WASM C ABI for raw unions
* Fix invalid selector for acceleration structure
* Fix `check_shift`
* Forbid nested declaration of instrumentation procedures
* Fix bug where compiler treated `uint` enums as `int`s
* Fix load type panic because front-end allows a deref of a type
* Added options to show, obfuscate, trim, and hide source code locations
* Various fixes

## New Packages
* `vendor/kb_text_shape`

## Package Improvements
* Add examples/all/sdl3 for all sdl3 dependant packages
* Rewrite `Atomic_RW_Mutex`
* Add overlapped I/O bindings for Windows
* Allow `odin check examples/all` for `js_wasm` target
* Guard against negative `index` in `inject_at`
* Print timings to stderr instead of stdout
* Change `os2.user_*` on Windows to use `SHGetKnownFolderPath`
* Add `core:os/os2` user dirs helper to retrieve common paths like Downloads, Videos, et al
* Clarify `strconv.append_*` to `strconv.write_*`
* Remove old @(deprecated) things.
* DXC: Fixed broken bindings of `ICompiler` and `ICompiler2`
* Fix GMT+/- timezone handling
* Clarify `core:flags` variadic behaviors
* Move `core:math/bÃ¬g` tests over to `core:testing` instead of using Python3 as an oracle
* Add initial tests for big rationals
* Sync chan refactor
* Replace `core:posix` usage in `core:os/os2`
* compat allocator improvements
* Fix `pool_join` hangs if no threads are started
* Fix early `join` after start
* Expose `getpeername` in `core:net` package as `peer_endpoint`
* Let tests expect assertion failures and signals raised
* Get env buffer
* Allow `core:net` to be imported with `-default-to-panic-allocator`
* Update vendor:sdl3 from 3.2.10 to 3.2.16, and vendor:sdl3/image from 3.2.0 to 3.2.4
* More `Buddy_Allocator` safeguards
* Fix RegEx docs
* Added TIOCGWINSZ to darwin, linux and freebsd
* Escape object file paths properly during linker_stage
* Fix `try_send` and `send`
* Added `IS_SUPPORTED` to `core:sys/posix`
* Fix issue parsing `vendor/stb/image` with the `core:odin/parser` parser
* Fix memory leak in `core:math/big.internal_rat_norm`
* raylib: Refer to Odin-style enum over original C enum
* sys/linux: Unify `IPC_Flags` and `IPC_Mode` bit_sets
* testing: Make test state changes its own feature
* Add `slice.suffix_length`
* Various fixes

**Full Changelog**: https://github.com/odin-lang/Odin/compare/dev-2025-06...dev-2025-07</releaseNotes>

    <!--<dependencies></dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
