<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>odin</id>
    <version>2025.06-dev</version>
    <packageSourceUrl>https://github.com/wanwanvxt/chocolatey-packages/tree/main/odin</packageSourceUrl>
    <owners>wanwan</owners>

    <title>Odin (Portable)</title>
    <authors>gingerBill</authors>
    <projectUrl>https://odin-lang.org/</projectUrl>
    <iconUrl>http://rawcdn.githack.com/wanwanvxt/chocolatey-packages/main/icons/odin.png</iconUrl>
    <copyright>gingerBill</copyright>
    <licenseUrl>https://github.com/odin-lang/Odin/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/odin-lang/Odin</projectSourceUrl>
    <docsUrl>https://odin-lang.org/docs/</docsUrl>
    <mailingListUrl>https://odin-lang.org/</mailingListUrl>
    <bugTrackerUrl>https://github.com/odin-lang/Odin/issues</bugTrackerUrl>
    <tags>language programming-language compiler programming-languages odin-programming-language odin odin-lang</tags>
    <summary>Odin Programming Language</summary>
    <description># The Odin Programming Language


Odin is a general-purpose programming language with distinct typing, built for high performance, modern systems, and built-in data-oriented data types. The Odin Programming Language, the C alternative for the joy of programming.

Website: [https://odin-lang.org/](https://odin-lang.org/)

```odin
package main

import "core:fmt"

main :: proc() {
	program := "+ + * ðŸ˜ƒ - /"
	accumulator := 0

	for token in program {
		switch token {
		case '+': accumulator += 1
		case '-': accumulator -= 1
		case '*': accumulator *= 2
		case '/': accumulator /= 2
		case 'ðŸ˜ƒ': accumulator *= accumulator
		case: // Ignore everything else
		}
	}

	fmt.printf("The program \"%s\" calculates the value %d\n",
	           program, accumulator)
}

```

## Documentation

#### [Getting Started](https://odin-lang.org/docs/install)

Instructions for downloading and installing the Odin compiler and libraries.

#### [Nightly Builds](https://odin-lang.org/docs/nightly/)

Get the latest nightly builds of Odin.

### Learning Odin

#### [Overview of Odin](https://odin-lang.org/docs/overview)

An overview of the Odin programming language.

#### [Frequently Asked Questions (FAQ)](https://odin-lang.org/docs/faq)

Answers to common questions about Odin.

#### [Packages](https://pkg.odin-lang.org/)

Documentation for all the official packages part of the [core](https://pkg.odin-lang.org/core/) and [vendor](https://pkg.odin-lang.org/vendor/) library collections.

#### [Examples](https://github.com/odin-lang/examples)

Examples on how to write idiomatic Odin code. Shows how to accomplish specific tasks in Odin, as well as how to use packages from `core` and `vendor`.

#### [Odin Documentation](https://odin-lang.org/docs/)

Documentation for the Odin language itself.

#### [Odin Discord](https://discord.gg/sVBPHEv)

Get live support and talk with other Odin programmers on the Odin Discord.

### Articles

#### [The Odin Blog](https://odin-lang.org/news/)

The official blog of the Odin programming language, featuring announcements, news, and in-depth articles by the Odin team and guests.

## Warnings

* The Odin compiler is still in development.</description>
    <releaseNotes>## New Language Features
* -

## New Compiler Improvements
* Improvements to building with Android
* Add more asan support to the odin runtime and sanitizing for various allocators
* Fix to compile-time and variable NaN comparisons
* Fix to syscalls on NetBSD ARM64
* Fix Darwin version reporting on older macOS versions
* General compiler bug fixes
* `intrinsics.type_elem_type(simd_vector)`
* Fix Global/Static Variable Alignment
* Fixes assigning null as a type if it's an alias but the base type is null
* `@(no_sanitize_address)`
* Support Objective-C class implementation
* Add debug info for labels to Odin
* `intrinsics.type_integer_to_unsigned` and `intrinsics.type_integer_to_signed`
* Use `--sysroot` instead of `-Wl,-syslibroot` on Darwin
* Fix global and static `any` usage
* Re-enable static map calls on AMD64 SysV due to ABI fixes
* Make `odin help` more precise
* `-dynamic-literals`
* Do not call disabled deferred procedures
* Add `/usr/local/lib` to FreeBSD linker path
* Add error with a suggestion when trying to extract an element from a `#simd` array, and prefer `simd.extract`
* Only trim `.odin` from build filename
* Keep shared libraries from calling main program's startup/cleanup procs on Linux
* Add `-build-only`, `-keep-test-executable`, delete test executable after running
* Enable all sanitizers on FreeBSD
* RAD Debugger support through custom `.raddbg` section
  * Default views for slices and matrices
* Error on unterminated multi-line comment
* Fix output of object names (https://github.com/odin-lang/Odin/pull/5241)
* Add suggestions for `quaternionN` or `complexN` conversions

## New Packages
* `base:sanitizer`
* `vendor:windows/XAudio2`
* `vendor:sdl3/ttf`
* `core:terminal`
* `core:encoding/ansi` -> `core:terminal/ansi`

## Package Improvements
* Vectorize `base:runtime.memory_*`
* `core:net`
  * Rework errors to be cross-platform
  * Replace `default_tcp_options` with a constant
* `core:container/small_array`: Improve documentation for
* `core:sync/chan`: Improve documentation
* `core:mem/tlsf`: refactor, add `free_all` support, add automatic new pools
* `core:fmt`: Fix printing for `bit_set[Enum]` when `min(Enum) != 0`
* `vendor/glfw`
  * fix `SetMonitorCallback` and `MonitorProc` type definition
  * use `b32` where appropriate
* `core:text/regex`: Add iterator
* `core:math`: Fix `math.nextafter` skipping from 0 to 1
* `vendor:wgpu`:
  * Update to 25.0.2.1
  * Fix function name for wgpu.js `genericGetAdapterInfo`
  * Correct `mipmpaFilter` field name in wgpu.js
* `core:time/timezone`: preserve nanoseconds on calls
* `vendor:box2d`:
  *  Update to 3.1.0
  * Add missing field in `box2d.BodyDef`
  * Make `build_box2d.sh` more flexible
* `core:container/priority_queue`
  * let it return `runtime.Allocator_Error`
  * Fix off-by-one error in `remove`
* `core:sys/darwin/Foundation` : Loads of additions and related stuff
* `vendor:sdl2`: correct RWwrite signature
* `vendor:sdl3`:
  * Fix `count` output parameter of `GetFullscreenDisplayModes`
  * Add `Semaphore` API
* `core:encoding/*`, fix parsing of CDATA tags
* `core:time`: add `tick_add`
* `core:encoding/cbor`, fix slice overflow
* `core:os/os2`: general improvements
* `vendor:wasm/WebGL`: Fix incorrect parameter types
* `core:bufio`: Fix typo from `b.w-b.w` to `b.w-b.r`
* `core:simd/x86`: BMI/BMI2 intrinsics
* `base:intrinsics`: alternate `reduce_add`/`reduce_mul` intrinsics
* `core:strconv`, add support for hex-floats (`0h`)
* `vendor:raylib/rlgl` add some missing functions
* `vendor:directx/d3d12`
  * add more FEATURE_DATA_OPTIONs
  * Fix RESOURCE_STATE_ALL_SHADER_RESOURCE flags and add new HEAP_TYPE
* `core:encoding/json`: when unmarshalling, only match on struct tags if present
* `vendor/miniaudio`: update to 0.11.22
* `core:math/big`: fix range check in `int_atoi`
* Add comments to `builtin.odin`, documenting ODIN_* constants
* `vendor:windows/GameInput`: fixes and tweaks
* `core:encoding/csv`: Fix incorrect CSV reader settings for example
* Vectorize `strings.prefix_length`

**Full Changelog**: https://github.com/odin-lang/Odin/compare/dev-2025-04...dev-2025-06</releaseNotes>

    <!--<dependencies></dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
